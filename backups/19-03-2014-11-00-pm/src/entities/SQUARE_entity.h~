/******************************
SQUARE entity class.
*********************************/




class SQUARE :private base_entity
{
    public:
        void render(); //renders current object.
        void handle_collision(int, int); //collision handler, takes ints to show what direction something hit it at.
        void handle_keys(int); //key handling function. Every object has one, this way we can make multiple entities act as one player.

}



void SQUARE::render()
{
        GLfloat pointTL[2] = {(locationX), (locationY + 0.0f)};
        GLfloat pointTR[2] = {(locationX + 0.1f), (locationY)};
        GLfloat pointBR[2] = {(locationX + 0.1f), (locationY - 0.1f)};
        GLfloat pointBL[2] = {(locationX), (locationY - 0.1f)};
    
        
        
                
        glLoadIdentity(); //load ID
        glBegin(GL_QUADS); //draw quad.
            glColor4f(colour4f[0],colour4f[1],colour4f[2],colour4f[3]);
            glVertex2f(pointTL[0],pointTL[1]);
            glVertex2f( pointTR[0],pointTR[1]);
            glVertex2f(pointBR[0],pointBR[1]);
            glVertex2f(pointBL[0],pointBL[1]);
        glEnd();

return;

}


void SQUARE::handle_keys(int key)
{
    return;
}

void handle_collision(int x, int y)
{
    return;
}
